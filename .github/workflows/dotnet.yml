name: eChop Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore ./eShopOnWeb.sln
    - name: Build
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    - name: Test
      run: dotnet test ./eShopOnWeb.sln --configuration Release
  buildPushAppImage:
    needs: build
    name: Build and Push to ACR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: ${{ secrets.ACR_USER }}
        # Container registry password
        password: ${{ secrets.ACR_PASSWORD }}
        # Container registry server url
        login-server: ${{ secrets.ACR_SERVER }}
    - name: Build Docker Image
      run : |
        docker build -f src/Web/Dockerfile . -t ${{ secrets.ACR_SERVER }}/eshop:${{ github.run_id }}
        docker push ${{ secrets.ACR_SERVER }}/eshop:${{ github.run_id }}

  deployStaging:
    runs-on: ubuntu-latest
    needs: buildPushAppImage
    environment: staging
    steps:
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: ${{ secrets.ACR_USER }}
        # Container registry password
        password: ${{ secrets.ACR_PASSWORD }}
        # Container registry server url
        login-server: ${{ secrets.ACR_SERVER }}
    - name: Azure Login
      uses: Azure/login@v1
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: githubworkshop760339244
        slot-name: staging
        images: ${{ secrets.ACR_SERVER }}/eshop:${{ github.run_id }}
        
  deployProduction:
    runs-on: ubuntu-latest
    needs: deployStaging
    environment: production
    steps:
    - name: Azure Login
      uses: Azure/login@v1
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Swap staging to production
      run: |
        az webapp deployment slot swap --name githubworkshop760339244 --resource-group githubworkshop760339244 slot staging
      
     
